<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>General Chatbot</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    .fade-enter {
      opacity: 0;
      transform: translateY(20px);
    }
    .fade-enter-active {
      opacity: 1;
      transform: translateY(0);
      transition: all 0.5s ease-out;
    }
    .slide-up-enter {
      opacity: 0;
      transform: translateY(50px);
    }
    .slide-up-enter-active {
      opacity: 1;
      transform: translateY(0);
      transition: all 0.5s ease-out 0.3s;
    }
  </style>
</head>

<body class="bg-gray-100 font-sans text-gray-900 min-h-screen flex flex-col">
  <!-- Header -->
  <div class="bg-white px-6 py-4 shadow-md flex items-center gap-3">
    <a href="/" class="text-black-700 flex items-center gap-2 font-bold text-xl">
      <svg viewBox="0 0 48 48" fill="currentColor" class="w-6 h-6">
        <path d="M44 4H30.6666V17.3334H17.3334V30.6666H4V44H44V4Z" />
      </svg>
      GardenGenius Chat
    </a>
  </div>

  <!-- Welcome screen -->
  <div id="welcome" class="flex flex-col justify-center items-center text-center flex-grow px-4 transition-all duration-500">
    <h1 class="text-2xl font-bold text-gray-800 mb-4">Welcome to the GardenGenius Chatbot</h1>
    <p class="text-gray-600 mb-6">Upload a soil report or ask questions about your soil or crops.</p>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
      <div class="bg-white p-4 shadow rounded-lg">
        <h3 class="text-green-700 font-semibold mb-2">Multilingual Support</h3>
        <p class="text-sm text-gray-600">Chat in English, Hindi, or Marathi for localized insights.</p>
      </div>
      <div class="bg-white p-4 shadow rounded-lg">
        <h3 class="text-green-700 font-semibold mb-2">Smart Soil Analysis</h3>
        <p class="text-sm text-gray-600">Upload soil reports and get meaningful suggestions from AI.</p>
      </div>
      <div class="bg-white p-4 shadow rounded-lg">
        <h3 class="text-green-700 font-semibold mb-2">Crop & Fertilizer Advice</h3>
        <p class="text-sm text-gray-600">Receive tailored advice to improve soil fertility and yield.</p>
      </div>
    </div>
    <form id="initial-form" class="w-full max-w-xl">
      <input id="file-input" type="file" accept=".jpg,.jpeg,.png,.pdf" class="hidden" />
      <button type="button" onclick="document.getElementById('file-input').click()" class="mb-4 px-4 py-2 rounded bg-green-500 text-white hover:bg-green-600">
        Upload File
      </button>
      <div class="relative">
        <textarea id="user-input" rows="2" placeholder="Ask your question here..." class="w-full resize-none border rounded-xl px-4 py-3 pr-10 focus:outline-none focus:ring-2 focus:ring-green-300"></textarea>
        <button type="submit" class="absolute right-2 bottom-2 text-green-600 hover:text-green-800">
          <i class="fa-solid fa-paper-plane"></i>
        </button>
      </div>
    </form>
  </div>

  <!-- Chat container -->
  <div id="chat-container" class="hidden flex-grow flex flex-col items-center px-4 py-6">
    <div id="chat-box" class="w-full max-w-4xl flex-1 bg-white rounded-lg shadow-md p-6 space-y-4 overflow-y-auto"></div>

    <!-- Question input area after transition -->
    <div id="question-input-area" class="w-full max-w-4xl mt-6 slide-up-enter-active">
      <form id="chat-form" class="flex items-center gap-2">
        <div class="relative flex-grow">
          <textarea id="chat-input" rows="2" placeholder="Ask another question..." class="w-full resize-none border rounded-xl px-4 py-3 pr-10 focus:outline-none focus:ring-2 focus:ring-green-300"></textarea>
          <button type="submit" class="absolute right-2 bottom-2 text-green-600 hover:text-green-800">
            <i class="fa-solid fa-paper-plane"></i>
          </button>
        </div>
        <input id="chat-file-input" type="file" accept=".jpg,.jpeg,.png,.pdf" class="hidden" />
        <button type="button" onclick="document.getElementById('chat-file-input').click()" class="flex items-center gap-2 text-green-700 border border-green-300 hover:bg-green-50 px-4 py-2 rounded">
          <i class="fas fa-paperclip"></i>
          Attach
        </button>
      </form>
    </div>
  </div>

  <script>
    const welcome = document.getElementById('welcome');
    const chatContainer = document.getElementById('chat-container');
    const initialForm = document.getElementById('initial-form');
    const chatForm = document.getElementById('chat-form');
    const userInput = document.getElementById('user-input');
    const chatInput = document.getElementById('chat-input');
    const fileInput = document.getElementById('file-input');
    const chatFileInput = document.getElementById('chat-file-input');
    const chatBox = document.getElementById('chat-box');

    function switchToChat() {
      welcome.classList.add('hidden');
      chatContainer.classList.remove('hidden');
      chatInput.focus();
    }

    function addMessage(text, type) {
      const div = document.createElement('div');
      div.className = `flex ${type === 'user' ? 'justify-end' : 'justify-start'}`;

      const bubble = document.createElement('div');
      bubble.className = `max-w-[75%] px-4 py-2 rounded-xl shadow text-sm whitespace-pre-line fade-enter-active ${
        type === 'user' ? 'bg-green-100 text-gray-800 rounded-br-none' : 'bg-white text-gray-900 rounded-bl-none border'
      }`;
      bubble.innerHTML = text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
      div.appendChild(bubble);
      chatBox.appendChild(div);
      chatBox.scrollTop = chatBox.scrollHeight;
    }

    async function sendMessage(prompt, file = null) {
      if (!prompt && !file) return;
      addMessage(prompt, 'user');

      const formData = new FormData();
      formData.append('prompt', prompt);
      if (file) formData.append('file', file);

      try {
        const res = await fetch('http://localhost:5001/file-chat', {
          method: 'POST',
          body: formData
        });
        const data = await res.json();
        addMessage(data.reply || 'No reply received.', 'bot');
      } catch (err) {
        addMessage('Chatbot error: ' + err.message, 'bot');
      }
    }

    initialForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const prompt = userInput.value.trim();
      const file = fileInput.files[0];
      if (!prompt && !file) return;
      switchToChat();
      sendMessage(prompt, file);
      userInput.value = '';
      fileInput.value = '';
    });

    chatForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const prompt = chatInput.value.trim();
      const file = chatFileInput.files[0];
      if (!prompt && !file) return;
      sendMessage(prompt, file);
      chatInput.value = '';
      chatFileInput.value = '';
    });
  </script>
</body>
</html>
